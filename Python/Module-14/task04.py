# Вы - отважный исследователь, и твоя карта указывает на сокровища,
# спрятанные в JSON-лесу. Каждый узел дерева представляет собой ключ,
# который может содержать либо сокровище, либо указание на следующий
# узел-ветвь.
# Требуется исследовать JSON-лес, чтобы найти все сокровища, скрытые в
# узлах дерева. Соберите все сокровища и выведите их на экран, чтобы
# узнать, что вы обнаружили в этом волшебном лесу.
# В результате работы программы нужно вывести все сокровища,
# найденные в сундуках, каждое сокровище на новой строке.
# Примечание: удачной идеей будет написание вспомогательной функции
# explore_treasure_map(treasure_map), использование рекурсии для
# вложенных словарей. В случае, если сундук присутствует в текущем
# словаре, выводить его содержимое. В цикле for можно обходить все
# ключи словаря и для всех остальных ключей, не являющимися сундуками,
# вызывать функцию explore_treasure_map(treasure_map[ключ]), тем самым
# "спускаясь" на уровень глубже в словарь.

import json

def find_treasures(filename):
    with open(filename, 'r', encoding='utf-8') as file:
        data = json.load(file)
    
    def explore(treasure_map):
        if isinstance(treasure_map, dict):
            if 'chest' in treasure_map:
                print(treasure_map['chest'])
            for key in treasure_map:
                explore(treasure_map[key])
    
    explore(data)

find_treasures('treasure_map.json')